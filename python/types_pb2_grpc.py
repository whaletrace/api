# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import types_pb2 as types__pb2


class TransactionServerStub(object):
  """*
  Server that provides main informations about transactions
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.TopTransactions = channel.unary_stream(
        '/types.TransactionServer/TopTransactions',
        request_serializer=types__pb2.CryptoTypeRequest.SerializeToString,
        response_deserializer=types__pb2.Transaction.FromString,
        )
    self.HistoricTransactions = channel.unary_stream(
        '/types.TransactionServer/HistoricTransactions',
        request_serializer=types__pb2.CryptoTypeRequest.SerializeToString,
        response_deserializer=types__pb2.Transaction.FromString,
        )
    self.SubscribeTransactions = channel.unary_stream(
        '/types.TransactionServer/SubscribeTransactions',
        request_serializer=types__pb2.CryptoCurrencyType.SerializeToString,
        response_deserializer=types__pb2.Transaction.FromString,
        )


class TransactionServerServicer(object):
  """*
  Server that provides main informations about transactions
  """

  def TopTransactions(self, request, context):
    """Obtain top transaction from given time-frame of given asset as a stream
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def HistoricTransactions(self, request, context):
    """Obtain historic transactions from given time-frame of given asset a stream
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscribeTransactions(self, request, context):
    """subscribe to the newest transactions of given asset
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TransactionServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'TopTransactions': grpc.unary_stream_rpc_method_handler(
          servicer.TopTransactions,
          request_deserializer=types__pb2.CryptoTypeRequest.FromString,
          response_serializer=types__pb2.Transaction.SerializeToString,
      ),
      'HistoricTransactions': grpc.unary_stream_rpc_method_handler(
          servicer.HistoricTransactions,
          request_deserializer=types__pb2.CryptoTypeRequest.FromString,
          response_serializer=types__pb2.Transaction.SerializeToString,
      ),
      'SubscribeTransactions': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeTransactions,
          request_deserializer=types__pb2.CryptoCurrencyType.FromString,
          response_serializer=types__pb2.Transaction.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'types.TransactionServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
